//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a mozart.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Mozart.Common;
using Mozart.Collections;
using Mozart.Extensions;
using Mozart.Mapping;
using Mozart.Data;
using Mozart.Data.Entity;
using Mozart.Task.Execution;
using System.ComponentModel;
using Mozart.Task.Execution.Persists;
using MicronBEAssy.Inputs;
using Mozart.DataActions;
using MicronBEAssy.Outputs;

namespace MicronBEAssy
{
    
    /// <summary>
    /// Mozart task execution parameters class
    /// </summary>
    public partial class GlobalParameters : Parameters
    {
        private float _period = 2F;
        public virtual float period
        {
            get
            {
                return this._period;
            }
            set
            {
                _period = value;
            }
        }
        private System.DateTime _start_time = ((System.DateTime)(System.Convert.ChangeType("04/23/2018 22:00:00", typeof(System.DateTime), System.Globalization.CultureInfo.InvariantCulture)));
        [System.ComponentModel.DisplayNameAttribute("start-time")]
        public virtual System.DateTime start_time
        {
            get
            {
                return this._start_time;
            }
            set
            {
                _start_time = value;
            }
        }
        public static GlobalParameters Instance { get { return InputMart.Instance.GlobalParameters; }}
    }
    /// <summary>
    /// Mozart task execution parameters class
    /// </summary>
    public partial class ConfigParameters : Parameters
    {
    }
    /// <summary>
    /// Input data context class
    /// </summary>
    public partial class InputMart : InputRepository
    {
        public static InputMart Instance { get { return (InputMart)ServiceLocator.Resolve<InputRepository> (); }}
        public EntityTable<ProductMaster> ProductMaster
        {
            get
            {
                return this.GetTable<ProductMaster>();
            }
        }
        public EntityTable<ProcessStep> ProcessStep
        {
            get
            {
                return this.GetTable<ProcessStep>();
            }
        }
        public EntityTable<StepMaster> StepMaster
        {
            get
            {
                return this.GetTable<StepMaster>();
            }
        }
        private EntityView<StepMaster> _StepMasterView;
        /// <summary>
        /// Key: STEP_ID
        /// </summary>
        public EntityView<StepMaster> StepMasterView
        {
            get
            {
                if ((this._StepMasterView == null))
                {
                    this._StepMasterView = this.CreateView<StepMaster>(this.StepMaster, null, "STEP_ID", Mozart.Data.Entity.IndexType.Hashtable);
                }
                return this._StepMasterView;
            }
        }
        public EntityTable<McpBom> McpBom
        {
            get
            {
                return this.GetTable<McpBom>();
            }
        }
        private EntityView<McpBom> _McpBomView;
        /// <summary>
        /// Keys: FINAL_PROD_ID, COMP_SEQ
        /// </summary>
        public EntityView<McpBom> McpBomView
        {
            get
            {
                if ((this._McpBomView == null))
                {
                    this._McpBomView = this.CreateView<McpBom>(this.McpBom, null, "FINAL_PROD_ID,COMP_SEQ", Mozart.Data.Entity.IndexType.Hashtable);
                }
                return this._McpBomView;
            }
        }
        public EntityTable<MaterialBom> MaterialBom
        {
            get
            {
                return this.GetTable<MaterialBom>();
            }
        }
        public EntityTable<ProductRoute> ProductRoute
        {
            get
            {
                return this.GetTable<ProductRoute>();
            }
        }
        public EntityTable<BinSplitInfo> BinSplitInfo
        {
            get
            {
                return this.GetTable<BinSplitInfo>();
            }
        }
        public EntityTable<AltProductInfo> AltProductInfo
        {
            get
            {
                return this.GetTable<AltProductInfo>();
            }
        }
        public EntityTable<Demand> Demand
        {
            get
            {
                return this.GetTable<Demand>();
            }
        }
        public EntityTable<StepTat> StepTat
        {
            get
            {
                return this.GetTable<StepTat>();
            }
        }
        public EntityTable<Yield> Yield
        {
            get
            {
                return this.GetTable<Yield>();
            }
        }
        public EntityTable<ActInfo> ActInfo
        {
            get
            {
                return this.GetTable<ActInfo>();
            }
        }
        public EntityTable<HoldInfo> HoldInfo
        {
            get
            {
                return this.GetTable<HoldInfo>();
            }
        }
        public EntityTable<Wip> Wip
        {
            get
            {
                return this.GetTable<Wip>();
            }
        }
        public EntityTable<MoveWip> MoveWip
        {
            get
            {
                return this.GetTable<MoveWip>();
            }
        }
        public EntityTable<SubConWip> SubConWip
        {
            get
            {
                return this.GetTable<SubConWip>();
            }
        }
        public EntityTable<MaterialWip> MaterialWip
        {
            get
            {
                return this.GetTable<MaterialWip>();
            }
        }
        public EntityTable<WaferSupplyPlan> WaferSupplyPlan
        {
            get
            {
                return this.GetTable<WaferSupplyPlan>();
            }
        }
        public EntityTable<MaterialSupplyPlan> MaterialSupplyPlan
        {
            get
            {
                return this.GetTable<MaterialSupplyPlan>();
            }
        }
        public EntityTable<Equipment> Equipment
        {
            get
            {
                return this.GetTable<Equipment>();
            }
        }
        public EntityTable<EqpStatus> EqpStatus
        {
            get
            {
                return this.GetTable<EqpStatus>();
            }
        }
        public EntityTable<PMSchedule> PMSchedule
        {
            get
            {
                return this.GetTable<PMSchedule>();
            }
        }
        public EntityTable<EqpArrange> EqpArrange
        {
            get
            {
                return this.GetTable<EqpArrange>();
            }
        }
        public EntityTable<StepTime> StepTime
        {
            get
            {
                return this.GetTable<StepTime>();
            }
        }
        public EntityTable<SetupInfo> SetupInfo
        {
            get
            {
                return this.GetTable<SetupInfo>();
            }
        }
        public EntityTable<SetupCrew> SetupCrew
        {
            get
            {
                return this.GetTable<SetupCrew>();
            }
        }
        public EntityTable<ToolMaster> ToolMaster
        {
            get
            {
                return this.GetTable<ToolMaster>();
            }
        }
        public EntityTable<ToolArrange> ToolArrange
        {
            get
            {
                return this.GetTable<ToolArrange>();
            }
        }
        public EntityTable<PGMSetting> PGMSetting
        {
            get
            {
                return this.GetTable<PGMSetting>();
            }
        }
        public EntityTable<ToolStatus> ToolStatus
        {
            get
            {
                return this.GetTable<ToolStatus>();
            }
        }
        public EntityTable<StdLotSize> StdLotSize
        {
            get
            {
                return this.GetTable<StdLotSize>();
            }
        }
        public EntityTable<StdStep> StdStep
        {
            get
            {
                return this.GetTable<StdStep>();
            }
        }
        protected override void ClearMyModel()
        {
            base.ClearMyModel();
            this.DisposeIfNeeds(this._StepMasterView);
            this._StepMasterView = null;
            this.DisposeIfNeeds(this._McpBomView);
            this._McpBomView = null;
        }
        /// <summary>
        /// Global Pararamters
        /// </summary>
        public GlobalParameters GlobalParameters
        {
            get
            {
                return ((GlobalParameters)(this.GlobalParametersCore));
            }
        }
        public ConfigParameters GetConfigParameters(string key)
        {
            return this.GetParameters<ConfigParameters>(key);
        }
    }
    /// <summary>
    /// Input data context class
    /// </summary>
    public partial class TempMart : TempRepository
    {
        public static TempMart Instance { get { return (TempMart)ServiceLocator.Resolve<TempRepository> (); }}
    }
    /// <summary>
    /// Output data context class
    /// </summary>
    public partial class OutputMart : OutputRepository
    {
        public static OutputMart Instance { get { return (OutputMart)ServiceLocator.Resolve<OutputRepository> (); }}
        public IEntityWriter<StepTarget> StepTarget
        {
            get
            {
                return this.GetTable<StepTarget>();
            }
        }
        public IEntityWriter<PegHistory> PegHistory
        {
            get
            {
                return this.GetTable<PegHistory>();
            }
        }
        public IEntityWriter<UnPegHistory> UnPegHistory
        {
            get
            {
                return this.GetTable<UnPegHistory>();
            }
        }
        public IEntityWriter<EqpPlan> EqpPlan
        {
            get
            {
                return this.GetTable<EqpPlan>();
            }
        }
        public IEntityWriter<ErrorHistory> ErrorHistory
        {
            get
            {
                return this.GetTable<ErrorHistory>();
            }
        }
        public IEntityWriter<MasterDataErrorLog> MasterDataErrorLog
        {
            get
            {
                return this.GetTable<MasterDataErrorLog>();
            }
        }
    }
}
